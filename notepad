### APP FLOW
A: create new week
A: populate games
A: lock week
U: users can now see games, notified
U: user select picks
D: week auto-locks at certain time
N: if user did not make picks, no big, user cannot make more selections
A: admin enter in game scores
A: finalizes, and starts new week (blank)

### Big Questions / To Do
auto-lock on User picks
can User see the games prior to the 10-game slate being ready?
how to make them wait to make selections until slate is ready (lock?)?


### CONFIGURE
devise => https://github.com/plataformatec/devise
$ rails generate devise:install
$ rails generate devise MODEL
$ rails generate devise:views

password length?
config/initializers/devise.rb:
config.password_length = 10..128

Next, you need to set up the default URL options for the Devise mailer in each environment. Here is a possible configuration for config/environments/development.rb:
config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

Devise will create some helpers to use inside your controllers and views. To set up a controller with user authentication, just add this before_action (assuming your devise model is 'User'):
before_action :authenticate_user!

To verify if a user is signed in, use the following helper:
user_signed_in?

For the current signed-in user, this helper is available:
current_user

You can access the session for this scope:
user_session

root to: 'home#index'

simple_form => https://github.com/plataformatec/simple_form
rails generate simple_form:install


### beautify rails console... Hirb.enable

### standings...
call method when Admin closes current week... calculate wins/losses
updates the table (10 games for standings plus tiebreaker game (11) if needed)

### selecting user's picks
I want all user picks
lk = User.find(1)
lk.picks

I want all games in a week
wk = Week.find_by(week:1)
wk.games

I want all the picks from a particular weekwk =
wk = Game.where(week_id:1)
wk.each do |w|
  wkpk = w.picks.where(user_id:1) OR wkpk = w.picks.find_by(user_id:1)
  puts wkpk[0].pick OR puts wkpk.pick
end

Putting it all together
wk = Week.find_by(week:2)
wk.games.each do |g|
  wkpk = Pick.find_by(game_id: g.id, user_id:2)
  puts wkpk.pick
end
